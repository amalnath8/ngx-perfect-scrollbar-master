{"ast":null,"code":"import { Subject, fromEvent, merge } from 'rxjs';\nimport { auditTime, takeUntil, distinctUntilChanged, mapTo } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, PLATFORM_ID, Directive, Inject, Optional, Input, Output, Component, ViewEncapsulation, HostBinding, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport ResizeObserver from 'resize-observer-polyfill';\nconst PERFECT_SCROLLBAR_CONFIG = new InjectionToken('PERFECT_SCROLLBAR_CONFIG');\nclass Geometry {\n  x;\n  y;\n  w;\n  h;\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n}\nclass Position {\n  x;\n  y;\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\nconst PerfectScrollbarEvents = ['psScrollY', 'psScrollX', 'psScrollUp', 'psScrollDown', 'psScrollLeft', 'psScrollRight', 'psYReachEnd', 'psYReachStart', 'psXReachEnd', 'psXReachStart'];\nclass PerfectScrollbarConfig {\n  handlers;\n  wheelSpeed;\n  swipeEasing;\n  suppressScrollX;\n  suppressScrollY;\n  wheelPropagation;\n  useBothWheelAxes;\n  scrollingThreshold;\n  minScrollbarLength;\n  maxScrollbarLength;\n  scrollXMarginOffset;\n  scrollYMarginOffset;\n  constructor(config = {}) {\n    this.assign(config);\n  }\n  assign(config = {}) {\n    for (const key in config) {\n      this[key] = config[key];\n    }\n  }\n}\nlet PerfectScrollbarDirective = /*#__PURE__*/(() => {\n  class PerfectScrollbarDirective {\n    zone;\n    differs;\n    elementRef;\n    platformId;\n    defaults;\n    instance = null;\n    ro = null;\n    timeout = null;\n    animation = null;\n    configDiff = null;\n    ngDestroy = new Subject();\n    disabled = false;\n    config;\n    psScrollY = new EventEmitter();\n    psScrollX = new EventEmitter();\n    psScrollUp = new EventEmitter();\n    psScrollDown = new EventEmitter();\n    psScrollLeft = new EventEmitter();\n    psScrollRight = new EventEmitter();\n    psYReachEnd = new EventEmitter();\n    psYReachStart = new EventEmitter();\n    psXReachEnd = new EventEmitter();\n    psXReachStart = new EventEmitter();\n    constructor(zone, differs, elementRef, platformId, defaults) {\n      this.zone = zone;\n      this.differs = differs;\n      this.elementRef = elementRef;\n      this.platformId = platformId;\n      this.defaults = defaults;\n    }\n    ngOnInit() {\n      if (!this.disabled && isPlatformBrowser(this.platformId)) {\n        const config = new PerfectScrollbarConfig(this.defaults);\n        config.assign(this.config); // Custom configuration\n        this.zone.runOutsideAngular(() => {\n          this.instance = new PerfectScrollbar(this.elementRef.nativeElement, config);\n        });\n        if (!this.configDiff) {\n          this.configDiff = this.differs.find(this.config || {}).create();\n          this.configDiff.diff(this.config || {});\n        }\n        this.zone.runOutsideAngular(() => {\n          this.ro = new ResizeObserver(() => {\n            this.update();\n          });\n          if (this.elementRef.nativeElement.children[0]) {\n            this.ro.observe(this.elementRef.nativeElement.children[0]);\n          }\n          this.ro.observe(this.elementRef.nativeElement);\n        });\n        this.zone.runOutsideAngular(() => {\n          PerfectScrollbarEvents.forEach(eventName => {\n            const eventType = eventName.replace(/([A-Z])/g, c => `-${c.toLowerCase()}`);\n            fromEvent(this.elementRef.nativeElement, eventType).pipe(auditTime(20), takeUntil(this.ngDestroy)).subscribe(event => {\n              this[eventName].emit(event);\n            });\n          });\n        });\n      }\n    }\n    ngOnDestroy() {\n      if (isPlatformBrowser(this.platformId)) {\n        this.ngDestroy.next();\n        this.ngDestroy.complete();\n        if (this.ro) {\n          this.ro.disconnect();\n        }\n        if (this.timeout && typeof window !== 'undefined') {\n          window.clearTimeout(this.timeout);\n        }\n        this.zone.runOutsideAngular(() => {\n          if (this.instance) {\n            this.instance.destroy();\n          }\n        });\n        this.instance = null;\n      }\n    }\n    ngDoCheck() {\n      if (!this.disabled && this.configDiff && isPlatformBrowser(this.platformId)) {\n        const changes = this.configDiff.diff(this.config || {});\n        if (changes) {\n          this.ngOnDestroy();\n          this.ngOnInit();\n        }\n      }\n    }\n    ngOnChanges(changes) {\n      if (changes['disabled'] && !changes['disabled'].isFirstChange() && isPlatformBrowser(this.platformId)) {\n        if (changes['disabled'].currentValue !== changes['disabled'].previousValue) {\n          if (changes['disabled'].currentValue === true) {\n            this.ngOnDestroy();\n          } else if (changes['disabled'].currentValue === false) {\n            this.ngOnInit();\n          }\n        }\n      }\n    }\n    ps() {\n      return this.instance;\n    }\n    update() {\n      if (typeof window !== 'undefined') {\n        if (this.timeout) {\n          window.clearTimeout(this.timeout);\n        }\n        this.timeout = window.setTimeout(() => {\n          if (!this.disabled && this.configDiff) {\n            try {\n              this.zone.runOutsideAngular(() => {\n                if (this.instance) {\n                  this.instance.update();\n                }\n              });\n            } catch (error) {\n              // Update can be finished after destroy so catch errors\n            }\n          }\n        }, 0);\n      }\n    }\n    geometry(prefix = 'scroll') {\n      return new Geometry(this.elementRef.nativeElement[prefix + 'Left'], this.elementRef.nativeElement[prefix + 'Top'], this.elementRef.nativeElement[prefix + 'Width'], this.elementRef.nativeElement[prefix + 'Height']);\n    }\n    position(absolute = false) {\n      if (!absolute && this.instance) {\n        return new Position(this.instance.reach.x || 0, this.instance.reach.y || 0);\n      } else {\n        return new Position(this.elementRef.nativeElement.scrollLeft, this.elementRef.nativeElement.scrollTop);\n      }\n    }\n    scrollable(direction = 'any') {\n      const element = this.elementRef.nativeElement;\n      if (direction === 'any') {\n        return element.classList.contains('ps--active-x') || element.classList.contains('ps--active-y');\n      } else if (direction === 'both') {\n        return element.classList.contains('ps--active-x') && element.classList.contains('ps--active-y');\n      } else {\n        return element.classList.contains('ps--active-' + direction);\n      }\n    }\n    scrollTo(x, y, speed) {\n      if (!this.disabled) {\n        if (y == null && speed == null) {\n          this.animateScrolling('scrollTop', x, speed);\n        } else {\n          if (x != null) {\n            this.animateScrolling('scrollLeft', x, speed);\n          }\n          if (y != null) {\n            this.animateScrolling('scrollTop', y, speed);\n          }\n        }\n      }\n    }\n    scrollToX(x, speed) {\n      this.animateScrolling('scrollLeft', x, speed);\n    }\n    scrollToY(y, speed) {\n      this.animateScrolling('scrollTop', y, speed);\n    }\n    scrollToTop(offset, speed) {\n      this.animateScrolling('scrollTop', offset || 0, speed);\n    }\n    scrollToLeft(offset, speed) {\n      this.animateScrolling('scrollLeft', offset || 0, speed);\n    }\n    scrollToRight(offset, speed) {\n      const left = this.elementRef.nativeElement.scrollWidth - this.elementRef.nativeElement.clientWidth;\n      this.animateScrolling('scrollLeft', left - (offset || 0), speed);\n    }\n    scrollToBottom(offset, speed) {\n      const top = this.elementRef.nativeElement.scrollHeight - this.elementRef.nativeElement.clientHeight;\n      this.animateScrolling('scrollTop', top - (offset || 0), speed);\n    }\n    scrollToElement(element, offset, speed) {\n      if (typeof element === 'string') {\n        element = this.elementRef.nativeElement.querySelector(element);\n      }\n      if (element) {\n        const elementPos = element.getBoundingClientRect();\n        const scrollerPos = this.elementRef.nativeElement.getBoundingClientRect();\n        if (this.elementRef.nativeElement.classList.contains('ps--active-x')) {\n          const currentPos = this.elementRef.nativeElement['scrollLeft'];\n          const position = elementPos.left - scrollerPos.left + currentPos;\n          this.animateScrolling('scrollLeft', position + (offset || 0), speed);\n        }\n        if (this.elementRef.nativeElement.classList.contains('ps--active-y')) {\n          const currentPos = this.elementRef.nativeElement['scrollTop'];\n          const position = elementPos.top - scrollerPos.top + currentPos;\n          this.animateScrolling('scrollTop', position + (offset || 0), speed);\n        }\n      }\n    }\n    animateScrolling(target, value, speed) {\n      if (this.animation) {\n        window.cancelAnimationFrame(this.animation);\n        this.animation = null;\n      }\n      if (!speed || typeof window === 'undefined') {\n        this.elementRef.nativeElement[target] = value;\n      } else if (value !== this.elementRef.nativeElement[target]) {\n        let newValue = 0;\n        let scrollCount = 0;\n        let oldTimestamp = performance.now();\n        let oldValue = this.elementRef.nativeElement[target];\n        const cosParameter = (oldValue - value) / 2;\n        const step = newTimestamp => {\n          scrollCount += Math.PI / (speed / (newTimestamp - oldTimestamp));\n          newValue = Math.round(value + cosParameter + cosParameter * Math.cos(scrollCount));\n          // Only continue animation if scroll position has not changed\n          if (this.elementRef.nativeElement[target] === oldValue) {\n            if (scrollCount >= Math.PI) {\n              this.animateScrolling(target, value, 0);\n            } else {\n              this.elementRef.nativeElement[target] = newValue;\n              // On a zoomed out page the resulting offset may differ\n              oldValue = this.elementRef.nativeElement[target];\n              oldTimestamp = newTimestamp;\n              this.animation = window.requestAnimationFrame(step);\n            }\n          }\n        };\n        window.requestAnimationFrame(step);\n      }\n    }\n    static ɵfac = function PerfectScrollbarDirective_Factory(t) {\n      return new (t || PerfectScrollbarDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.KeyValueDiffers), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(PERFECT_SCROLLBAR_CONFIG, 8));\n    };\n    static ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: PerfectScrollbarDirective,\n      selectors: [[\"\", \"perfectScrollbar\", \"\"]],\n      inputs: {\n        disabled: \"disabled\",\n        config: [\"perfectScrollbar\", \"config\"]\n      },\n      outputs: {\n        psScrollY: \"psScrollY\",\n        psScrollX: \"psScrollX\",\n        psScrollUp: \"psScrollUp\",\n        psScrollDown: \"psScrollDown\",\n        psScrollLeft: \"psScrollLeft\",\n        psScrollRight: \"psScrollRight\",\n        psYReachEnd: \"psYReachEnd\",\n        psYReachStart: \"psYReachStart\",\n        psXReachEnd: \"psXReachEnd\",\n        psXReachStart: \"psXReachStart\"\n      },\n      exportAs: [\"ngxPerfectScrollbar\"],\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return PerfectScrollbarDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction PerfectScrollbarComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelement(1, \"div\", 4)(2, \"div\", 5)(3, \"div\", 6)(4, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"ps-at-top\", ctx_r0.states.top)(\"ps-at-left\", ctx_r0.states.left)(\"ps-at-right\", ctx_r0.states.right)(\"ps-at-bottom\", ctx_r0.states.bottom);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"ps-indicator-show\", ctx_r0.indicatorY && ctx_r0.interaction);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"ps-indicator-show\", ctx_r0.indicatorX && ctx_r0.interaction);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"ps-indicator-show\", ctx_r0.indicatorX && ctx_r0.interaction);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"ps-indicator-show\", ctx_r0.indicatorY && ctx_r0.interaction);\n  }\n}\nconst _c0 = [\"*\"];\nlet PerfectScrollbarComponent = /*#__PURE__*/(() => {\n  class PerfectScrollbarComponent {\n    zone;\n    cdRef;\n    platformId;\n    states = {};\n    indicatorX = false;\n    indicatorY = false;\n    interaction = false;\n    scrollPositionX = 0;\n    scrollPositionY = 0;\n    scrollDirectionX = 0;\n    scrollDirectionY = 0;\n    usePropagationX = false;\n    usePropagationY = false;\n    allowPropagationX = false;\n    allowPropagationY = false;\n    stateTimeout = null;\n    ngDestroy = new Subject();\n    stateUpdate = new Subject();\n    disabled = false;\n    usePSClass = true;\n    autoPropagation = false;\n    scrollIndicators = false;\n    config;\n    psScrollY = new EventEmitter();\n    psScrollX = new EventEmitter();\n    psScrollUp = new EventEmitter();\n    psScrollDown = new EventEmitter();\n    psScrollLeft = new EventEmitter();\n    psScrollRight = new EventEmitter();\n    psYReachEnd = new EventEmitter();\n    psYReachStart = new EventEmitter();\n    psXReachEnd = new EventEmitter();\n    psXReachStart = new EventEmitter();\n    directiveRef;\n    constructor(zone, cdRef, platformId) {\n      this.zone = zone;\n      this.cdRef = cdRef;\n      this.platformId = platformId;\n    }\n    ngOnInit() {\n      if (isPlatformBrowser(this.platformId)) {\n        this.stateUpdate.pipe(takeUntil(this.ngDestroy), distinctUntilChanged((a, b) => a === b && !this.stateTimeout)).subscribe(state => {\n          if (this.stateTimeout && typeof window !== 'undefined') {\n            window.clearTimeout(this.stateTimeout);\n            this.stateTimeout = null;\n          }\n          if (state === 'x' || state === 'y') {\n            this.interaction = false;\n            if (state === 'x') {\n              this.indicatorX = false;\n              this.states.left = false;\n              this.states.right = false;\n              if (this.autoPropagation && this.usePropagationX) {\n                this.allowPropagationX = false;\n              }\n            } else if (state === 'y') {\n              this.indicatorY = false;\n              this.states.top = false;\n              this.states.bottom = false;\n              if (this.autoPropagation && this.usePropagationY) {\n                this.allowPropagationY = false;\n              }\n            }\n          } else {\n            if (state === 'left' || state === 'right') {\n              this.states.left = false;\n              this.states.right = false;\n              this.states[state] = true;\n              if (this.autoPropagation && this.usePropagationX) {\n                this.indicatorX = true;\n              }\n            } else if (state === 'top' || state === 'bottom') {\n              this.states.top = false;\n              this.states.bottom = false;\n              this.states[state] = true;\n              if (this.autoPropagation && this.usePropagationY) {\n                this.indicatorY = true;\n              }\n            }\n            if (this.autoPropagation && typeof window !== 'undefined') {\n              this.stateTimeout = window.setTimeout(() => {\n                this.indicatorX = false;\n                this.indicatorY = false;\n                this.stateTimeout = null;\n                if (this.interaction && (this.states.left || this.states.right)) {\n                  this.allowPropagationX = true;\n                }\n                if (this.interaction && (this.states.top || this.states.bottom)) {\n                  this.allowPropagationY = true;\n                }\n                this.cdRef.markForCheck();\n              }, 500);\n            }\n          }\n          this.cdRef.markForCheck();\n          this.cdRef.detectChanges();\n        });\n        this.zone.runOutsideAngular(() => {\n          if (this.directiveRef) {\n            const element = this.directiveRef.elementRef.nativeElement;\n            fromEvent(element, 'wheel').pipe(takeUntil(this.ngDestroy)).subscribe(event => {\n              if (!this.disabled && this.autoPropagation) {\n                const scrollDeltaX = event.deltaX;\n                const scrollDeltaY = event.deltaY;\n                this.checkPropagation(event, scrollDeltaX, scrollDeltaY);\n              }\n            });\n            fromEvent(element, 'touchmove').pipe(takeUntil(this.ngDestroy)).subscribe(event => {\n              if (!this.disabled && this.autoPropagation) {\n                const scrollPositionX = event.touches[0].clientX;\n                const scrollPositionY = event.touches[0].clientY;\n                const scrollDeltaX = scrollPositionX - this.scrollPositionX;\n                const scrollDeltaY = scrollPositionY - this.scrollPositionY;\n                this.checkPropagation(event, scrollDeltaX, scrollDeltaY);\n                this.scrollPositionX = scrollPositionX;\n                this.scrollPositionY = scrollPositionY;\n              }\n            });\n            merge(fromEvent(element, 'ps-scroll-x').pipe(mapTo('x')), fromEvent(element, 'ps-scroll-y').pipe(mapTo('y')), fromEvent(element, 'ps-x-reach-end').pipe(mapTo('right')), fromEvent(element, 'ps-y-reach-end').pipe(mapTo('bottom')), fromEvent(element, 'ps-x-reach-start').pipe(mapTo('left')), fromEvent(element, 'ps-y-reach-start').pipe(mapTo('top'))).pipe(takeUntil(this.ngDestroy)).subscribe(state => {\n              if (!this.disabled && (this.autoPropagation || this.scrollIndicators)) {\n                this.stateUpdate.next(state);\n              }\n            });\n          }\n        });\n        window.setTimeout(() => {\n          PerfectScrollbarEvents.forEach(eventName => {\n            if (this.directiveRef) {\n              this.directiveRef[eventName] = this[eventName];\n            }\n          });\n        }, 0);\n      }\n    }\n    ngOnDestroy() {\n      if (isPlatformBrowser(this.platformId)) {\n        this.ngDestroy.next();\n        this.ngDestroy.unsubscribe();\n        if (this.stateTimeout && typeof window !== 'undefined') {\n          window.clearTimeout(this.stateTimeout);\n        }\n      }\n    }\n    ngDoCheck() {\n      if (isPlatformBrowser(this.platformId)) {\n        if (!this.disabled && this.autoPropagation && this.directiveRef) {\n          const element = this.directiveRef.elementRef.nativeElement;\n          this.usePropagationX = element.classList.contains('ps--active-x');\n          this.usePropagationY = element.classList.contains('ps--active-y');\n        }\n      }\n    }\n    checkPropagation(event, deltaX, deltaY) {\n      this.interaction = true;\n      const scrollDirectionX = deltaX < 0 ? -1 : 1;\n      const scrollDirectionY = deltaY < 0 ? -1 : 1;\n      if (this.usePropagationX && this.usePropagationY || this.usePropagationX && (!this.allowPropagationX || this.scrollDirectionX !== scrollDirectionX) || this.usePropagationY && (!this.allowPropagationY || this.scrollDirectionY !== scrollDirectionY)) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      if (!!deltaX) {\n        this.scrollDirectionX = scrollDirectionX;\n      }\n      if (!!deltaY) {\n        this.scrollDirectionY = scrollDirectionY;\n      }\n      this.stateUpdate.next('interaction');\n      this.cdRef.detectChanges();\n    }\n    static ɵfac = function PerfectScrollbarComponent_Factory(t) {\n      return new (t || PerfectScrollbarComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PLATFORM_ID));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PerfectScrollbarComponent,\n      selectors: [[\"perfect-scrollbar\"]],\n      viewQuery: function PerfectScrollbarComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(PerfectScrollbarDirective, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.directiveRef = _t.first);\n        }\n      },\n      hostVars: 4,\n      hostBindings: function PerfectScrollbarComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ps-show-limits\", ctx.autoPropagation)(\"ps-show-active\", ctx.scrollIndicators);\n        }\n      },\n      inputs: {\n        disabled: \"disabled\",\n        usePSClass: \"usePSClass\",\n        autoPropagation: \"autoPropagation\",\n        scrollIndicators: \"scrollIndicators\",\n        config: \"config\"\n      },\n      outputs: {\n        psScrollY: \"psScrollY\",\n        psScrollX: \"psScrollX\",\n        psScrollUp: \"psScrollUp\",\n        psScrollDown: \"psScrollDown\",\n        psScrollLeft: \"psScrollLeft\",\n        psScrollRight: \"psScrollRight\",\n        psYReachEnd: \"psYReachEnd\",\n        psYReachStart: \"psYReachStart\",\n        psXReachEnd: \"psXReachEnd\",\n        psXReachStart: \"psXReachStart\"\n      },\n      exportAs: [\"ngxPerfectScrollbar\"],\n      ngContentSelectors: _c0,\n      decls: 4,\n      vars: 5,\n      consts: [[2, \"position\", \"static\", 3, \"perfectScrollbar\", \"disabled\"], [1, \"ps-content\"], [\"class\", \"ps-overlay\", 3, \"ps-at-top\", \"ps-at-left\", \"ps-at-right\", \"ps-at-bottom\", 4, \"ngIf\"], [1, \"ps-overlay\"], [1, \"ps-indicator-top\"], [1, \"ps-indicator-left\"], [1, \"ps-indicator-right\"], [1, \"ps-indicator-bottom\"]],\n      template: function PerfectScrollbarComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵprojection(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, PerfectScrollbarComponent_div_3_Template, 5, 16, \"div\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ps\", ctx.usePSClass);\n          i0.ɵɵproperty(\"perfectScrollbar\", ctx.config)(\"disabled\", ctx.disabled);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.scrollIndicators);\n        }\n      },\n      dependencies: [i1.NgIf, PerfectScrollbarDirective],\n      styles: [\"perfect-scrollbar{position:relative;display:block;overflow:hidden;width:100%;height:100%;max-width:100%;max-height:100%}perfect-scrollbar[hidden]{display:none}perfect-scrollbar[fxflex]{display:flex;flex-direction:column;height:auto;min-width:0;min-height:0}perfect-scrollbar[fxflex]>.ps{flex:1 1 auto;width:auto;height:auto;min-width:0;min-height:0;-webkit-box-flex:1}perfect-scrollbar[fxlayout]>.ps,perfect-scrollbar[fxlayout]>.ps>.ps-content{display:flex;flex:1 1 auto;flex-direction:inherit;align-items:inherit;align-content:inherit;justify-content:inherit;width:100%;height:100%;-webkit-box-align:inherit;-webkit-box-flex:1;-webkit-box-pack:inherit}perfect-scrollbar[fxlayout=\\\"row\\\"] > .ps,perfect-scrollbar[fxlayout=\\\"row\\\"] > .ps > .ps-content,{flex-direction:row!important}perfect-scrollbar[fxlayout=column]>.ps,perfect-scrollbar[fxlayout=column]>.ps>.ps-content{flex-direction:column!important}perfect-scrollbar>.ps{position:static;display:block;width:100%;height:100%;max-width:100%;max-height:100%}perfect-scrollbar>.ps textarea{-ms-overflow-style:scrollbar}perfect-scrollbar>.ps>.ps-overlay{position:absolute;inset:0;display:block;overflow:hidden;pointer-events:none}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-top,perfect-scrollbar>.ps>.ps-overlay .ps-indicator-left,perfect-scrollbar>.ps>.ps-overlay .ps-indicator-right,perfect-scrollbar>.ps>.ps-overlay .ps-indicator-bottom{position:absolute;opacity:0;transition:opacity .3s ease-in-out}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-top,perfect-scrollbar>.ps>.ps-overlay .ps-indicator-bottom{left:0;min-width:100%;min-height:24px}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-left,perfect-scrollbar>.ps>.ps-overlay .ps-indicator-right{top:0;min-width:24px;min-height:100%}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-top{top:0}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-left{left:0}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-right{right:0}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-bottom{bottom:0}perfect-scrollbar>.ps.ps--active-y>.ps__rail-y{top:0!important;right:0!important;left:auto!important;width:10px;cursor:default;transition:width .2s linear,opacity .2s linear,background-color .2s linear}perfect-scrollbar>.ps.ps--active-y>.ps__rail-y:hover,perfect-scrollbar>.ps.ps--active-y>.ps__rail-y.ps--clicking{width:15px}perfect-scrollbar>.ps.ps--active-x>.ps__rail-x{top:auto!important;bottom:0!important;left:0!important;height:10px;cursor:default;transition:height .2s linear,opacity .2s linear,background-color .2s linear}perfect-scrollbar>.ps.ps--active-x>.ps__rail-x:hover,perfect-scrollbar>.ps.ps--active-x>.ps__rail-x.ps--clicking{height:15px}perfect-scrollbar>.ps.ps--active-x.ps--active-y>.ps__rail-y{margin:0 0 10px}perfect-scrollbar>.ps.ps--active-x.ps--active-y>.ps__rail-x{margin:0 10px 0 0}perfect-scrollbar>.ps.ps--scrolling-y>.ps__rail-y,perfect-scrollbar>.ps.ps--scrolling-x>.ps__rail-x{opacity:.9;background-color:#eee}perfect-scrollbar.ps-show-always>.ps.ps--active-y>.ps__rail-y,perfect-scrollbar.ps-show-always>.ps.ps--active-x>.ps__rail-x{opacity:.6}perfect-scrollbar.ps-show-active>.ps.ps--active-y>.ps-overlay:not(.ps-at-top) .ps-indicator-top{opacity:1;background:linear-gradient(to bottom,rgba(255,255,255,.5) 0%,rgba(255,255,255,0) 100%)}perfect-scrollbar.ps-show-active>.ps.ps--active-y>.ps-overlay:not(.ps-at-bottom) .ps-indicator-bottom{opacity:1;background:linear-gradient(to top,rgba(255,255,255,.5) 0%,rgba(255,255,255,0) 100%)}perfect-scrollbar.ps-show-active>.ps.ps--active-x>.ps-overlay:not(.ps-at-left) .ps-indicator-left{opacity:1;background:linear-gradient(to right,rgba(255,255,255,.5) 0%,rgba(255,255,255,0) 100%)}perfect-scrollbar.ps-show-active>.ps.ps--active-x>.ps-overlay:not(.ps-at-right) .ps-indicator-right{opacity:1;background:linear-gradient(to left,rgba(255,255,255,.5) 0%,rgba(255,255,255,0) 100%)}perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-y>.ps-overlay.ps-at-top .ps-indicator-top{background:linear-gradient(to bottom,rgba(170,170,170,.5) 0%,rgba(170,170,170,0) 100%)}perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-y>.ps-overlay.ps-at-bottom .ps-indicator-bottom{background:linear-gradient(to top,rgba(170,170,170,.5) 0%,rgba(170,170,170,0) 100%)}perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-x>.ps-overlay.ps-at-left .ps-indicator-left{background:linear-gradient(to right,rgba(170,170,170,.5) 0%,rgba(170,170,170,0) 100%)}perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-x>.ps-overlay.ps-at-right .ps-indicator-right{background:linear-gradient(to left,rgba(170,170,170,.5) 0%,rgba(170,170,170,0) 100%)}perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-y>.ps-overlay.ps-at-top .ps-indicator-top.ps-indicator-show,perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-y>.ps-overlay.ps-at-bottom .ps-indicator-bottom.ps-indicator-show,perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-x>.ps-overlay.ps-at-left .ps-indicator-left.ps-indicator-show,perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-x>.ps-overlay.ps-at-right .ps-indicator-right.ps-indicator-show{opacity:1}\\n\", \".ps{overflow:hidden!important;overflow-anchor:none;-ms-overflow-style:none;touch-action:auto;-ms-touch-action:auto}.ps__rail-x{display:none;opacity:0;transition:background-color .2s linear,opacity .2s linear;-webkit-transition:background-color .2s linear,opacity .2s linear;height:15px;bottom:0;position:absolute}.ps__rail-y{display:none;opacity:0;transition:background-color .2s linear,opacity .2s linear;-webkit-transition:background-color .2s linear,opacity .2s linear;width:15px;right:0;position:absolute}.ps--active-x>.ps__rail-x,.ps--active-y>.ps__rail-y{display:block;background-color:transparent}.ps:hover>.ps__rail-x,.ps:hover>.ps__rail-y,.ps--focus>.ps__rail-x,.ps--focus>.ps__rail-y,.ps--scrolling-x>.ps__rail-x,.ps--scrolling-y>.ps__rail-y{opacity:.6}.ps .ps__rail-x:hover,.ps .ps__rail-y:hover,.ps .ps__rail-x:focus,.ps .ps__rail-y:focus,.ps .ps__rail-x.ps--clicking,.ps .ps__rail-y.ps--clicking{background-color:#eee;opacity:.9}.ps__thumb-x{background-color:#aaa;border-radius:6px;transition:background-color .2s linear,height .2s ease-in-out;-webkit-transition:background-color .2s linear,height .2s ease-in-out;height:6px;bottom:2px;position:absolute}.ps__thumb-y{background-color:#aaa;border-radius:6px;transition:background-color .2s linear,width .2s ease-in-out;-webkit-transition:background-color .2s linear,width .2s ease-in-out;width:6px;right:2px;position:absolute}.ps__rail-x:hover>.ps__thumb-x,.ps__rail-x:focus>.ps__thumb-x,.ps__rail-x.ps--clicking .ps__thumb-x{background-color:#999;height:11px}.ps__rail-y:hover>.ps__thumb-y,.ps__rail-y:focus>.ps__thumb-y,.ps__rail-y.ps--clicking .ps__thumb-y{background-color:#999;width:11px}@supports (-ms-overflow-style: none){.ps{overflow:auto!important}}@media screen and (-ms-high-contrast: active),(-ms-high-contrast: none){.ps{overflow:auto!important}}\\n\"],\n      encapsulation: 2\n    });\n  }\n  return PerfectScrollbarComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ForceNativeScrollDirective = /*#__PURE__*/(() => {\n  class ForceNativeScrollDirective {\n    renderer;\n    constructor(renderer, el) {\n      this.renderer = renderer;\n      ['ps__child', 'ps__child--consume'].forEach(className => {\n        this.renderer.addClass(el?.nativeElement, className);\n      });\n    }\n    static ɵfac = function ForceNativeScrollDirective_Factory(t) {\n      return new (t || ForceNativeScrollDirective)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n    static ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: ForceNativeScrollDirective,\n      selectors: [[\"\", \"forceNativeScrolling\", \"\"]]\n    });\n  }\n  return ForceNativeScrollDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PerfectScrollbarModule = /*#__PURE__*/(() => {\n  class PerfectScrollbarModule {\n    static ɵfac = function PerfectScrollbarModule_Factory(t) {\n      return new (t || PerfectScrollbarModule)();\n    };\n    static ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: PerfectScrollbarModule\n    });\n    static ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [CommonModule, CommonModule]\n    });\n  }\n  return PerfectScrollbarModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PerfectScrollbarModule, {\n    declarations: [PerfectScrollbarComponent, PerfectScrollbarDirective, ForceNativeScrollDirective],\n    imports: [CommonModule],\n    exports: [CommonModule, PerfectScrollbarComponent, PerfectScrollbarDirective, ForceNativeScrollDirective]\n  });\n})();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ForceNativeScrollDirective, Geometry, PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarComponent, PerfectScrollbarConfig, PerfectScrollbarDirective, PerfectScrollbarModule, Position };\n//# sourceMappingURL=ngx-perfect-scrollbar.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}